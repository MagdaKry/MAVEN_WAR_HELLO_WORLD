pipeline{
    agent {
        label 'AnsibleControlNode'
    }

    tools {
        maven "MVN_HOME"
    }

    stages{
       stage('Maven Build') {
         steps {
           echo 'Here you should trigger a maven build of your application using either bat(windows) or sh(linux)'
           sh "mvn clean package"
         }
       }
       
      stage('Docker Build'){

            steps{
                echo 'In this step you should build your docker image using the docker build command'
                echo 'So you need to build an image from the WAR that you generated previously'
                echo 'Remember that starting point of your image should be tomcat in order to serve the application on the web'
                sh "docker build . -t magkry/application:1.0"
            }
        }
        
      stage('DockerHub Push'){
            steps{
                echo 'You should first login to your github account using the withCredentials synatx'
                echo 'And for that you need to create the appropriate credentials to access the github account in Jenkins'
                echo 'Then you need to push this image to the public registry dockerhub into your account'
                echo 'Use the docker push command'
                withCredentials([usernamePassword(credentialsId: '7e604d0a-6712-420e-a0c6-0b8b61ab50bc', passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
                       // some block
                       sh "docker login -u ${env.DOCKER_USERNAME} -p ${env.DOCKER_PASSWORD}"
                   }
                sh "docker push magkry/application:1.0"
                
            }
        }
  
      stage('Docker Deploy'){
            steps{
                echo 'You should use the ansiblePlaybook syntax in order to call your playbook'
                echo 'But before that you need to create an agent in order to execute the playbook on the Ansible controle node machine'
                sh "ansible-playbook deploy-docker.yml"
            }
        }        
    }
    
}
